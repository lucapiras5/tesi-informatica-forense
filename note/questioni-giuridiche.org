#+TITLE: Questioni giuridiche

* Da fare

- Cercare linee guida italiane sul software testing.
- Modificare la scaletta in modo da considerare GNU/Linux parte del software, e aggiungere sezioni sul "software per produrre software", come compilatori, e "software per eseguire software" (come Linux), per dettagliare perché devono essere anche loro software libero (più elementi liberi ci sono, più è astrattamente affidabile il risultato).
- Fonti sull'uso di distribuzioni Linux su computer del governo.

* Standard tecnici/legali della DF

* Software proprietario, open source

- Brevetti: MP3, codifica video
- Diritto d'autore
  - EULA
- Licenze open-source

* Reverse engineering

** Atari v. Nintendo

- Nintendo sviluppa il 10NES, un chip di protezione per evitare l'uso di cartucce non ufficiali sulla loro console.
- Atari vuole creare un clone del 10NES, in modo da aggirare il sistema di protezione proprietario della Nintendo e vendere cartucce non autorizzate.
- Atari chiede una copia del codice sorgente del 10NES all'ufficio del copyright con un falso pretesto, e riesce a creare un clone.
- Nintendo fa causa ad Atari per violazione del diritto d'autore.
- In appello, la Corte determina che il reverse engineering di per sé rientra nel fair use, e non è una violazione del diritto d'autore.
- Tuttavia, dato che Atari ha ottenuto il codice sorgente sotto false pretese, non può invocare il fair use.

[[https://en.wikipedia.org/wiki/Atari_Games_Corp._v._Nintendo_of_America_Inc.][Wikipedia: Atari Games Corp. v. Nintendo of America Inc.]]

[[https://digitalcommons.du.edu/cgi/viewcontent.cgi?article=2288&context=dlr][Computer Copyright Protection Narrows as Video Game Giants Battle in Atari v. Nintendo]]

** Sega v. Accolade

- Sega introduce un sistema di protezione che richiede la presenza di una sequenza di byte all'interno della cartuccia.
- Accolade usa il reverse engineering per trovare questa sequenza di byte, e pubblicare videogiochi senza ottenere una licenza dalla Sega.
- Sega fa causa ad Accolade per violazione di copyright, ma in appello la corte rigetta gli argomenti di Sega.
- La quantità di materiale protetto dal diritto d'autore di Sega che è stato copiato per aggirare il sistema di protezione è minimo, circa 20-25 byte.
- Il fatto che Accolade abbia aggirato il sistema di protezione non ha danneggiato le vendite dei giochi di Sega.
- La quantità di lavoro necessaria per sviluppare il sistema di protezione è irrilevante (dottrina "sweat of the brow").
- In generale, il reverse engineering è ammesso se è l'unico modo per accedere alle idee e procedure espresse in un programma per computer.

Conclusione: è possibile copiare piccole parti di un sistema proprietario se è strettamente necessario per il reverse engineering, se il reverse engieering è fatto a fini scientifici il mercato originale del prodotto non viene danneggiato, il costo sostenuto per sviluppare il prodotto non implica copyright.

** DMCA e DeCSS

- DMCA riduce possibilità di fare reverse engineering
- DeCSS: libertà di espressione del codice sorgente v. algoritmi.

** ReactOS e leak del codice sorgente di Windows XP

** Oracle v. Google

Le API non sono protette da copyright, e rientrano nel fair use.  Pertanto, è possibile utilizzare i nomi delle funzioni di dati e strutture senza incorrere in violazione di copyright.

- Harvard Law Review: [[https://harvardlawreview.org/print/vol-135/google-llc-v-oracle-america-inc/][Google LLC v. Oracle America, Inc.]]
- EFF: [[https://www.eff.org/cases/oracle-v-google][Oracle v. Google]]

** Diritto europeo

- LWN: [[https://lwn.net/Articles/134642/][Software, reverse engineering and the law]]
- Gerrish: [[https://www.gerrishlegal.com/blog/2020/04/16/2020-4-7-reverse-engineering-when-can-users-lawfully-decompile-software][Reverse Engineering: When Can Users Lawfully Decompile Software?]]
- Vidstrom: [[https://www.vidstromlabs.com/blog/the-legal-boundaries-of-reverse-engineering-in-the-eu/][The legal boundaries of reverse engineering in the EU]]
- YJOLT: [[https://yjolt.org/reverse-engineering-informational-privacy-law][Reverse Engineering Informational Privacy Law]]
- Bird & Bird: [[https://www.twobirds.com/en/insights/2020/germany/vertraglicher-ausschluss-von-reverse-engineering][Contractual Prohibition of Reverse Engineering under the New German Trade Secrets Act - a Practical Guide]]
- ScienceDirect: [[https://www.sciencedirect.com/science/article/pii/S0267364922000693][Legal and technical questions of file system reverse engineering]]

- Google v. Oracle: API
- Source code leak di Windows XP, ReactOS, clean room reimplementation
- EU law: interoperability, copyright forte
- https://www.eff.org/issues/coders/reverse-engineering-faq
- https://www.eff.org/wp/unintended-consequences-16-years-under-dmca

* Giusto processo, diritto alla difesa

- Gratuito patrocinio: costo della consulenza ...
- Diritto alla difesa: analisi del codice sorgente, riproducibilità dei risultati
- Segreto processuale, privacy per i dati acquisiti

* Aspetti pratici

- Acquisizione di dischi:
  - Documenti anonimi
- Acquisizione di RAM:
  - Come inquadrarla
- Analisi del traffico di rete:
  - Confronto con intercettazione e sequestro di corrispondenza
- Bitcoin:
  - Definizione legale
  - Analisi del wallet, blockchain in locale
- OSINT:
  - Ammissibilità di fonti pubbliche
  - Modalità di acquisizione, richieste legali
- Report interattivi:
  - Riproducibilità nel futuro
