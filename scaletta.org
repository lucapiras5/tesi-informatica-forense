#+TITLE: Scaletta della tesi -- Apologia per l'utilizzazione di distribuzioni GNU/Linux e software FOSS per la digital forensics
#+AUTHOR: Luca Piras
#+LANGUAGE: it

#+bibliography: orgcite.bib
# #+cite_export: csl universita-di-bologna-lettere.csl
# #+cite_export: csl

* Introduzione alla tesi

** Scelta del titolo

Le apologie[fn:1] erano discorsi pronunciati in difesa di una persona o una fede.[fn:2]

La presente tesi vuole in primo luogo confutare l'opinione che le applicazioni libere e a sorgente aperta siano utili /solo/ ad amatori e dilettanti, mentre i professionisti /devono/ usare solo applicazioni proprietarie.

Inoltre, vuole dimostrare che:

- Nella ricostruzione dei fatti in un processo, le applicazioni proprietarie possano avere più funzionalità rispetto alle applicazioni libere e a sorgente aperta, ma al grave costo di essere intrinsecamente inaffidabili, e di creare risultati potenzialmente non riproducibili.
- Le applicazioni libere e a sorgente aperta sono maggiormente affidabili, possono produrre risultati riproducibili, e che in molti casi le funzionalità sono equivalenti rispetto alle applicazioni proprietarie.

** Struttura

La tesi è divsa in tre parti.

La prima parte fornisce delle nozioni di base: spiega cosa siano esattamente /GNU/Linux/, le filosofia /free/libre and open-source/, e la /digital forensics/.

La seconda parte è la vera e propria apologia: consiste in una serie di argomenti tecnici e giuridici che dimostrano la superiorità teorica del FLOSS rispetto al software proprietario.

La terza parte entra nel concreto: si discutono quali applicazioni FLOSS vengono usate per la DF, e le relative potenzialità ed i limiti.

* Definizioni

** Unix

- Tutto inizia da Unix:
  - GNU vuole essere compatibile con i programmi di Unix, e migliorarlo (Stallman 1983).[fn:3]
  - Linux nasce come un clone di Minix (Torvalds 1991),[fn:4] che a sua volta era un clone di Unix (Tanenbaum 1987, 21).[fn:5]
  - Persino il tempo viene contato facendo riferimento alla /epoca Unix/.[fn:6]
- Unix nasce all'inizio degli anni '70, e nel 1972 viene riscritto in C.
  - Distinzione fra codice sorgente e codice compilato.
  - Accenno ai linguaggi di scripting (non devono essere interpretati, Volatility è usato per l'analisi della RAM ed è scritto in Python) ed ai linguaggi che usano una rappresentazione intermedia ed una macchina virtuale (Python, Java, ELisp).
  - /Unix and C are the ultimate computer viruses./ (Gabriel 1991).[fn:7]

** FLOSS

- L'idea di software proprietario si afferma negli anni '70. Precedentemente, il software veniva considerato parte integrante dell'hardware, e venduto insieme [cite:@gonzalez-barahona-2021 75].

- Perché Stallman crea il software open source?
- Funzione delle licenze:
  - Il codice sorgente è soggetto a copyright

- Licenze open-source
- Natura del codice:
  - Differenza fra codice sorgente e codice eseguibile
  - Il codice sorgente è soggetto al diritto d'autore
- Definizione di software libero:
  - Prima libertà: eseguire il software
  - Seconda libertà: studiare il codice sorgente e modificarlo
  - Terza e quarta libertà: ridistribuire copie, anche modificate
- GNU GPL, MIT, etc.
- Distribuzioni Linux pienamente libre, Debian
- Android non è una distribuzione libre (Stallman 2011)[fn:8] ed usa una licenza permissiva per ragioni di convenienza (Android Developers 2022).[fn:9]
- Il dramma di readline:
  - https://www.gnu.org/licenses/why-not-lgpl.html
  - https://github.com/JoshCheek/clisp/blob/master/doc/Why-CLISP-is-under-GPL
  - https://www.thrysoee.dk/editline/
  - https://github.com/hanslub42/rlwrap
- GPL v3 e Tivoization

** GNU

- GNU nasce prima di Linux
- Fornisce una serie di programmi strettamente necessari per un sistema operativo
- In partico
  - Una shell: programma per lanciare altri programmi
  - Un editor di testo: programma per modificare file di testo
  - Un compilatore: programma che converte file di testo in programmi eseguibili
- GNU è generalmente compatibile con Unix, e segue lo standard POSIX, ma ci sono delle differenze

Le distribuzioni che /non/ usano GNU sono l'eccezione.

Il sistema operativo per smartphone Android, usa Linux [cite:@android-developers-2023-platform-architecture], ma non GNU [cite:@stallman-2011-is-android-really-free-software].

Distribuzioni specificamente progettate per sistemi integrati, come OpenWRT,[fn:10] o comunque genericamente progettate per utilizzare la minore quantità di risorse possibili, come Alpine Linux,[fn:11] che sostituiscono tutti gli applicativi del sistema operativo GNU con un singolo applicativo, chiamato BusyBox.[fn:12]

- TODO:
  - Esistono distribuzioni generiche e distribuzioni specifiche, e molte distribuzioni sono riconducibili ad altre
  - È possibile creare una distribuzione partendo da zero, se si hanno le conoscenze tecniche necessarie

** Linux

Cf. https://www.polimata.eu/digital-life/kernel-spiegazione/

** Distribuzioni GNU/Linux

*** GNU/Linux è una famiglia di distribuzioni

Così come non esiste "un" Unix, ma esistono più sistemi operativi derivati da Unix, non esiste "un" Linux, ma piuttosto, un numero di /distribuzioni Linux/.[fn:13]

Linux in sé non è nemmeno un sistema operativo, ma soltanto un suo componente fondamentale [cite:@stallman-2021-linux-and-gnu-it].

Ogni distro[fn:14] usa il /kernel Linux/, e la stragrande maggioranza usa il /sistema operativo GNU/.  Linux e GNU saranno approfonditi nelle sezioni successive.

*** Package manager (gestore dei pacchetti)

Intanto, è possibile tracciare delle distinzioni fra le varie distribuzioni:

- Frequenza di aggiornamento ::
  - Le /point release distro/ vengono aggiornate più raramente. Ad es., Debian rilascia una versione detta /stable/ (stabile) ogni circa 2 anni,[fn:15] e gli aggiornamenti fra una versione e l'altra servono solo a 

:appunti:
- L'elemento più centrale di una distro è il gestore di pacchetti
- Debian e Slackware sono le distro più antiche ancora in uso
- Confronto fra Debian e Arch
- Kali Linux
- Debian stable non vuol dire bug-free, ma che i bug sono prevedibili
- Aggiornamenti costanti sono desiderabili solo per gli strumenti di analisi
- NixOS e versioni riproducibili
:end:

** Digital forensics

- Definizione di informatica forense
- Definizione di informatica e di scienze forensi
- Evoluzione verso la digital forensics
- Necessità di una formalizzazione e definizione di best practices
- Standard ISO sulla digital evidence
- Principi generali sul trattamento della prova informatica:
  - Convenzione di Budapest
  - Principi generali su come trattare i dati informatici nel codice di procedura penale italiano
- Natura della prova informatica:
  - Natura dei dati digitali e della prova informatica secondo la dottrina e la Cassazione
- Aspetti pratici della prova informatica:
  - Mezzi di ricerca della prova informatica
    - Sequestro probatorio, ispezione e perquisizione, intercettazioni
  - Modalità di assunzione della fonte di prova informatica
    - Prova documentale, atipica, perizia/consulenza tecnica

* Ragioni a favore di GNU/Linux ed il FOSS

- Per il mondo enterprise (ad es., incident response) non interessa se gli strumenti sono open-source o meno, la cosa più importante è che funzionino
- Diritto alla difesa: costo nullo
- Valutazione delle prove: ispezione del codice sorgente
- Obiezioni:
  - Il costo degli strumenti enterprise è giustificato dal loro supporto dedicato

* Utilizzazione pratica di GNU/Linux

* Bibliografia

#+print_bibliography:

* Footnotes

[fn:1] V. https://www.treccani.it/vocabolario/apologia.

[fn:2] Tradizionalmente, il cristianesimo.  Tuttavia, nel mondo GNU/Linux gli utilizzatori più fedeli dell'editor di testo /Emacs/ hanno scherzosamente creato la /Chiesa di Emacs/, presieduta da /San IGNUzio/.  V. https://stallman.org/saint.html.

[fn:3] V. https://www.gnu.org/gnu/initial-announcement.html.

[fn:4] V. https://cdn.kernel.org/pub/linux/kernel/Historic/old-versions/RELNOTES-0.01.

[fn:5] V. https://research.vu.nl/en/publications/a-unix-clone-with-source-code-for-operating-systems-courses.

[fn:6] V. https://unixtime.org/ e https://2038.wtf/.

[fn:7] V. https://dreamsongs.com/WIB.html.

[fn:8] V. https://www.theguardian.com/technology/2011/sep/19/android-free-software-stallman.

[fn:9] V. https://source.android.com/docs/setup/about/licenses.

[fn:10] Cf. https://openwrt.org/start

[fn:11] Cf. https://www.alpinelinux.org/about/

[fn:12] Cf. https://busybox.net/about.html

[fn:13] Per una una panoramica delle principali distribuzioni, cf. https://distrowatch.com/dwres.php?resource=major.

[fn:14] /Distro/, pl. /distros/ è l'abbreviazione colloquiale di /distribution/.

[fn:15] Cf. https://wiki.debian.org/it/DebianReleases
